{"ast":null,"code":"import { combineReducers } from \"redux\";\n\nvar authData = function authData() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case \"AUTH_USER_SUCCESS\":\n      return {\n        token: action.token,\n        isLoggedIn: true\n      };\n\n    case \"AUTH_USER_FAIL\":\n      return {\n        token: null,\n        isLoggedIn: false\n      };\n\n    default:\n      return state;\n  }\n};\n\nvar createUser = function createUser() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case \"CREATE_USER_LOADING\":\n      return {\n        isLoading: true,\n        isError: false,\n        isSuccess: false,\n        errors: null\n      };\n\n    case \"CREATE_USER_SUCCESS\":\n      return {\n        isLoading: false,\n        isError: false,\n        isSuccess: true,\n        errors: null\n      };\n\n    case \"CREATE_USER_FAIL\":\n      return {\n        isLoading: false,\n        isError: true,\n        isSuccess: false,\n        errors: action.payload\n      };\n\n    default:\n      return state;\n  }\n};\n\nvar loginUser = function loginUser() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case \"LOGIN_USER_LOADING\":\n      return {\n        isLoading: true,\n        isError: false,\n        isSuccess: false,\n        errors: null\n      };\n\n    case \"LOGIN_USER_SUCCESS\":\n      return {\n        isLoading: false,\n        isError: false,\n        isSuccess: true,\n        errors: null\n      };\n\n    case \"LOGIN_USER_FAIL\":\n      return {\n        isLoading: false,\n        isError: true,\n        isSuccess: false,\n        errors: action.payload\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default combineReducers({\n  createUser: createUser,\n  loginUser: loginUser,\n  authData: authData\n});","map":{"version":3,"sources":["C:/Users/parkgichan/Desktop/자기소개서/langtube/Rangtube/source/reducers/auth.reducer.js"],"names":["combineReducers","authData","state","action","type","token","isLoggedIn","createUser","isLoading","isError","isSuccess","errors","payload","loginUser"],"mappings":"AAIA,SAASA,eAAT,QAAgC,OAAhC;;AAGA,IAAMC,QAAQ,GAAG,SAAXA,QAAW,GAAwB;AAAA,MAAvBC,KAAuB,uEAAf,EAAe;AAAA,MAAXC,MAAW;;AACrC,UAAQA,MAAM,CAACC,IAAf;AACI,SAAK,mBAAL;AACI,aAAO;AACHC,QAAAA,KAAK,EAAEF,MAAM,CAACE,KADX;AAEHC,QAAAA,UAAU,EAAE;AAFT,OAAP;;AAIJ,SAAK,gBAAL;AACI,aAAO;AACHD,QAAAA,KAAK,EAAE,IADJ;AAEHC,QAAAA,UAAU,EAAE;AAFT,OAAP;;AAIJ;AACI,aAAOJ,KAAP;AAZR;AAcH,CAfD;;AAkBA,IAAMK,UAAU,GAAG,SAAbA,UAAa,GAAwB;AAAA,MAAvBL,KAAuB,uEAAf,EAAe;AAAA,MAAXC,MAAW;;AACvC,UAAQA,MAAM,CAACC,IAAf;AACI,SAAK,qBAAL;AACI,aAAO;AACHI,QAAAA,SAAS,EAAE,IADR;AAEHC,QAAAA,OAAO,EAAE,KAFN;AAGHC,QAAAA,SAAS,EAAE,KAHR;AAIHC,QAAAA,MAAM,EAAE;AAJL,OAAP;;AAMJ,SAAK,qBAAL;AACI,aAAO;AACHH,QAAAA,SAAS,EAAE,KADR;AAEHC,QAAAA,OAAO,EAAE,KAFN;AAGHC,QAAAA,SAAS,EAAE,IAHR;AAIHC,QAAAA,MAAM,EAAE;AAJL,OAAP;;AAMJ,SAAK,kBAAL;AACI,aAAO;AACHH,QAAAA,SAAS,EAAE,KADR;AAEHC,QAAAA,OAAO,EAAE,IAFN;AAGHC,QAAAA,SAAS,EAAE,KAHR;AAIHC,QAAAA,MAAM,EAAER,MAAM,CAACS;AAJZ,OAAP;;AAMJ;AACI,aAAOV,KAAP;AAvBR;AAyBH,CA1BD;;AA6BA,IAAMW,SAAS,GAAG,SAAZA,SAAY,GAAwB;AAAA,MAAvBX,KAAuB,uEAAf,EAAe;AAAA,MAAXC,MAAW;;AACtC,UAAQA,MAAM,CAACC,IAAf;AACI,SAAK,oBAAL;AACI,aAAO;AACHI,QAAAA,SAAS,EAAE,IADR;AAEHC,QAAAA,OAAO,EAAE,KAFN;AAGHC,QAAAA,SAAS,EAAE,KAHR;AAIHC,QAAAA,MAAM,EAAE;AAJL,OAAP;;AAMJ,SAAK,oBAAL;AACI,aAAO;AACHH,QAAAA,SAAS,EAAE,KADR;AAEHC,QAAAA,OAAO,EAAE,KAFN;AAGHC,QAAAA,SAAS,EAAE,IAHR;AAIHC,QAAAA,MAAM,EAAE;AAJL,OAAP;;AAMJ,SAAK,iBAAL;AACI,aAAO;AACHH,QAAAA,SAAS,EAAE,KADR;AAEHC,QAAAA,OAAO,EAAE,IAFN;AAGHC,QAAAA,SAAS,EAAE,KAHR;AAIHC,QAAAA,MAAM,EAAER,MAAM,CAACS;AAJZ,OAAP;;AAMJ;AACI,aAAOV,KAAP;AAvBR;AAyBH,CA1BD;;AA4BA,eAAeF,eAAe,CAAC;AAC3BO,EAAAA,UAAU,EAAVA,UAD2B;AAE3BM,EAAAA,SAAS,EAATA,SAF2B;AAG3BZ,EAAAA,QAAQ,EAARA;AAH2B,CAAD,CAA9B","sourcesContent":["/** 상태변경을 진행하는 파일 */\r\n/** dispatch 함수로 부터 전달받은 action 객체의 type 에 따라 상태를 변경 */\r\n\r\n/** 모듈 */\r\nimport { combineReducers } from \"redux\";\r\n\r\n/** 인증 수행 시 dispatch 함수로 부터 전달받은 action 객체의 유형의 따라 state를 변경 */\r\nconst authData = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case \"AUTH_USER_SUCCESS\":\r\n            return {\r\n                token: action.token,\r\n                isLoggedIn: true\r\n            }\r\n        case \"AUTH_USER_FAIL\":\r\n            return {\r\n                token: null,\r\n                isLoggedIn: false\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n/** 회원가입 수행 시 dispatch 함수로 부터 전달받은 action 객체의 유형의 따라 state를 변경 */\r\nconst createUser = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case \"CREATE_USER_LOADING\":\r\n            return {\r\n                isLoading: true,\r\n                isError: false,\r\n                isSuccess: false,\r\n                errors: null\r\n            }\r\n        case \"CREATE_USER_SUCCESS\":\r\n            return {\r\n                isLoading: false,\r\n                isError: false,\r\n                isSuccess: true,\r\n                errors: null\r\n            }\r\n        case \"CREATE_USER_FAIL\":\r\n            return {\r\n                isLoading: false,\r\n                isError: true,\r\n                isSuccess: false,\r\n                errors: action.payload\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n/** 로그인 수행 시 dispatch 함수로 부터 전달받은 action 객체의 유형의 따라 state를 변경 */\r\nconst loginUser = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case \"LOGIN_USER_LOADING\":\r\n            return {\r\n                isLoading: true,\r\n                isError: false,\r\n                isSuccess: false,\r\n                errors: null\r\n            }\r\n        case \"LOGIN_USER_SUCCESS\":\r\n            return {\r\n                isLoading: false,\r\n                isError: false,\r\n                isSuccess: true,\r\n                errors: null\r\n            }\r\n        case \"LOGIN_USER_FAIL\":\r\n            return {\r\n                isLoading: false,\r\n                isError: true,\r\n                isSuccess: false,\r\n                errors: action.payload\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default combineReducers({\r\n    createUser,\r\n    loginUser,\r\n    authData\r\n});"]},"metadata":{},"sourceType":"module"}