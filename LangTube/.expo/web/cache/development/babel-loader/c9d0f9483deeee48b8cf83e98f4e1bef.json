{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"C:\\\\Users\\\\parkgichan\\\\Desktop\\\\\\uC790\\uAE30\\uC18C\\uAC1C\\uC11C\\\\langtube\\\\Rangtube\\\\source\\\\pages\\\\Login.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport { Actions } from \"react-native-router-flux\";\nimport { connect } from \"react-redux\";\nimport { compose } from \"redux\";\nimport { Field, reduxForm } from \"redux-form\";\nimport Logo from \"../components/Logo\";\nimport InputText from \"../components/InputText\";\nimport Loader from \"../components/Loader\";\nimport { loginUser } from \"../actions/auth.actions\";\n\nvar Login = function (_React$Component) {\n  _inherits(Login, _React$Component);\n\n  var _super = _createSuper(Login);\n\n  function Login() {\n    var _this;\n\n    _classCallCheck(this, Login);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n\n    _this.loginUser = function _callee(values) {\n      var response, errorText;\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              _context.next = 3;\n              return _regeneratorRuntime.awrap(_this.props.dispatch(loginUser(values)));\n\n            case 3:\n              response = _context.sent;\n              console.log(response);\n\n              if (response.success) {\n                _context.next = 7;\n                break;\n              }\n\n              throw response;\n\n            case 7:\n              _context.next = 14;\n              break;\n\n            case 9:\n              _context.prev = 9;\n              _context.t0 = _context[\"catch\"](0);\n\n              if (_context.t0.message) {\n                errorText = _context.t0.message;\n              }\n\n              errorText = _context.t0.responseBody;\n              Alert.alert(\"이메일 또는 비밀번호를 확인해주세요.\", errorText, [{\n                text: \"Cancel\",\n                onPress: function onPress() {\n                  return console.log(\"Cancel Pressed\");\n                },\n                style: \"cancel\"\n              }]);\n\n            case 14:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, [[0, 9]], Promise);\n    };\n\n    _this.onSubmit = function (values) {\n      _this.loginUser(values);\n    };\n\n    _this.renderTextInput = function (field) {\n      var _field$meta = field.meta,\n          touched = _field$meta.touched,\n          error = _field$meta.error,\n          label = field.label,\n          secureTextEntry = field.secureTextEntry,\n          maxLength = field.maxLength,\n          keyboardType = field.keyboardType,\n          placeholder = field.placeholder,\n          _field$input = field.input,\n          onChange = _field$input.onChange,\n          restInput = _objectWithoutProperties(_field$input, [\"onChange\"]);\n\n      return React.createElement(View, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 13\n        }\n      }, React.createElement(InputText, _extends({\n        onChangeText: onChange,\n        maxLength: maxLength,\n        placeholder: placeholder,\n        keyboardType: keyboardType,\n        secureTextEntry: secureTextEntry,\n        label: label\n      }, restInput, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 17\n        }\n      })), error && touched && React.createElement(Text, {\n        style: styles.errorText,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 40\n        }\n      }, error));\n    };\n\n    return _this;\n  }\n\n  _createClass(Login, [{\n    key: \"signUpPage\",\n    value: function signUpPage() {\n      Actions.signup();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          handleSubmit = _this$props.handleSubmit,\n          loginUser = _this$props.loginUser;\n      return React.createElement(View, {\n        style: styles.container,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 13\n        }\n      }, loginUser && loginUser.isLoading && React.createElement(Loader, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 56\n        }\n      }), React.createElement(Logo, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 17\n        }\n      }), React.createElement(View, {\n        style: styles.formContainer,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 17\n        }\n      }, React.createElement(Field, {\n        name: \"email\",\n        placeholder: \" Email\",\n        component: this.renderTextInput,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 21\n        }\n      }), React.createElement(Field, {\n        name: \"password\",\n        placeholder: \" Password\",\n        secureTextEntry: true,\n        component: this.renderTextInput,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 21\n        }\n      }), React.createElement(TouchableOpacity, {\n        style: styles.signUpButton,\n        onPress: handleSubmit(this.onSubmit),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 21\n        }\n      }, React.createElement(Text, {\n        style: styles.signUpButtonText,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 25\n        }\n      }, \"\\uB85C\\uADF8\\uC778\"))), React.createElement(View, {\n        style: styles.signUpTextCont,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 17\n        }\n      }, React.createElement(Text, {\n        style: styles.signUpText,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 21\n        }\n      }, \"\\uC544\\uC9C1 \\uACC4\\uC815\\uC774 \\uC5C6\\uC73C\\uC2E0\\uAC00\\uC694?  \"), React.createElement(TouchableOpacity, {\n        onPress: this.signUpPage,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 21\n        }\n      }, React.createElement(Text, {\n        style: styles.signUpTextButton,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 25\n        }\n      }, \"\\uD68C\\uC6D0\\uAC00\\uC785\"))));\n    }\n  }]);\n\n  return Login;\n}(React.Component);\n\nvar validate = function validate(values) {\n  var errors = {};\n\n  if (!values.email) {\n    errors.email = \"메일주소를 입력해주세요.\";\n  }\n\n  if (!values.password) {\n    errors.password = \"비밀번호를 입력해주세요.\";\n  }\n\n  return errors;\n};\n\nmapStateToProps = function mapStateToProps(state) {\n  return {\n    loginUser: state.authReducer.loginUser\n  };\n};\n\nmapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    dispatch: dispatch\n  };\n};\n\nexport default compose(connect(mapStateToProps, mapDispatchToProps), reduxForm({\n  form: \"login\",\n  validate: validate\n}))(Login);\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"#fff\",\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  },\n  formContainer: {\n    flex: 1.5,\n    backgroundColor: \"#fff\",\n    alignItems: \"center\",\n    justifyContent: \"flex-start\"\n  },\n  loginTextCont: {\n    flex: 1,\n    backgroundColor: \"#fff\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    marginVertical: 15,\n    flexDirection: \"row\"\n  },\n  signUpTextCont: {\n    flex: 1,\n    backgroundColor: \"#fff\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    marginVertical: 15,\n    flexDirection: \"row\"\n  },\n  signUpText: {\n    color: \"#6E6E6E\"\n  },\n  signUpTextButton: {\n    color: \"#000000\",\n    fontWeight: \"600\"\n  },\n  signUpButton: {\n    backgroundColor: \"#000000\",\n    width: 300,\n    borderRadius: 20,\n    marginVertical: 25,\n    justifyContent: \"center\",\n    height: 40\n  },\n  signUpButtonText: {\n    color: \"#FFFFFF\",\n    fontSize: 17,\n    fontWeight: \"500\",\n    textAlign: \"center\"\n  },\n  errorText: {\n    color: \"#6E6E6E\",\n    fontSize: 13,\n    paddingHorizontal: 5,\n    paddingBottom: 3\n  }\n});","map":{"version":3,"sources":["C:/Users/parkgichan/Desktop/자기소개서/langtube/Rangtube/source/pages/Login.js"],"names":["React","Actions","connect","compose","Field","reduxForm","Logo","InputText","Loader","loginUser","Login","values","props","dispatch","response","console","log","success","message","errorText","responseBody","Alert","alert","text","onPress","style","onSubmit","renderTextInput","field","meta","touched","error","label","secureTextEntry","maxLength","keyboardType","placeholder","input","onChange","restInput","styles","signup","handleSubmit","container","isLoading","formContainer","signUpButton","signUpButtonText","signUpTextCont","signUpText","signUpPage","signUpTextButton","Component","validate","errors","email","password","mapStateToProps","state","authReducer","mapDispatchToProps","form","StyleSheet","create","flex","backgroundColor","alignItems","justifyContent","loginTextCont","marginVertical","flexDirection","color","fontWeight","width","borderRadius","height","fontSize","textAlign","paddingHorizontal","paddingBottom"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport { StyleSheet, Text, View, TouchableOpacity, Alert } from \"react-native\";\r\n\r\n/** 모듈 */\r\nimport { Actions } from \"react-native-router-flux\";   // 화면이동을 관리할 수 있게 해주는 모듈\r\nimport { connect } from \"react-redux\";   // Provider 하위에 존재하는 컴포넌트들이 store에 접근하게 해줌  \r\nimport { compose } from \"redux\";   // 전역에서 상태를 관리하고, 필요한 컴포넌트에서 상태를 쓸 수 있게 하는 모듈\r\nimport { Field, reduxForm } from \"redux-form\";\r\n\r\n/** 컴포넌트 */\r\nimport Logo from \"../components/Logo\";\r\nimport InputText from \"../components/InputText\";\r\nimport Loader from \"../components/Loader\";\r\nimport { loginUser } from \"../actions/auth.actions\";\r\n\r\n/** 로그인 기능의 전체적인 실행을 담당하는 클래스 */\r\nclass Login extends React.Component {\r\n\r\n    /** 회원가입 페이지로 이동 */\r\n    signUpPage() {\r\n        Actions.signup();\r\n    }\r\n\r\n    /** 로그인 동작을 서버와 통신 */\r\n    loginUser = async (values) => {\r\n        try {\r\n            const response = await this.props.dispatch(loginUser(values));\r\n            console.log(response);\r\n            if (!response.success) {\r\n                throw response;\r\n            }\r\n        }\r\n        /** 오류 메시지 출력 */\r\n        catch (error) {\r\n            let errorText;\r\n            if (error.message) {\r\n                errorText = error.message;\r\n            }\r\n            errorText = error.responseBody;\r\n            Alert.alert(\r\n                \"이메일 또는 비밀번호를 확인해주세요.\",\r\n                errorText,\r\n                [{ text: \"Cancel\", onPress: () => console.log(\"Cancel Pressed\"), style: \"cancel\" }]\r\n            );\r\n        }\r\n    }\r\n\r\n    onSubmit = (values) => {\r\n        this.loginUser(values);\r\n    }\r\n\r\n    /** 로그인 양식에 대한 오류 메시지 출력 */\r\n    renderTextInput = (field) => {\r\n        const { meta: { touched, error }, label, secureTextEntry, maxLength, keyboardType, placeholder, input: { onChange, ...restInput } } = field;\r\n        return (\r\n            <View>\r\n                <InputText\r\n                    onChangeText={onChange}\r\n                    maxLength={maxLength}\r\n                    placeholder={placeholder}\r\n                    keyboardType={keyboardType}\r\n                    secureTextEntry={secureTextEntry}\r\n                    label={label}\r\n                    {...restInput} />\r\n                {(error && touched) && <Text style={styles.errorText}>{error}</Text>}\r\n            </View>\r\n        );\r\n    }\r\n\r\n    render() {\r\n        const { handleSubmit, loginUser } = this.props;\r\n        return (\r\n            <View style={styles.container}>\r\n                {/* 로딩화면 */}\r\n                {(loginUser && loginUser.isLoading) && <Loader />}\r\n\r\n                {/* 로고 */}\r\n                <Logo />\r\n\r\n                <View style={styles.formContainer}>\r\n                    {/* 로그인 양식 */}\r\n                    <Field\r\n                        name=\"email\"\r\n                        placeholder=\" Email\"\r\n                        component={this.renderTextInput} />\r\n                    <Field\r\n                        name=\"password\"\r\n                        placeholder=\" Password\"\r\n                        secureTextEntry={true}\r\n                        component={this.renderTextInput} />\r\n                    {/* 로그인 버튼 */}\r\n                    <TouchableOpacity style={styles.signUpButton} onPress={handleSubmit(this.onSubmit)}>\r\n                        <Text style={styles.signUpButtonText}>로그인</Text>\r\n                    </TouchableOpacity>\r\n                </View>\r\n\r\n                {/* 회원가입 페이지 전환 버튼 */}\r\n                <View style={styles.signUpTextCont}>\r\n                    <Text style={styles.signUpText}>아직 계정이 없으신가요?  </Text>\r\n                    <TouchableOpacity onPress={this.signUpPage}>\r\n                        <Text style={styles.signUpTextButton}>회원가입</Text>\r\n                    </TouchableOpacity>\r\n                </View>\r\n            </View>\r\n        )\r\n    }\r\n}\r\n\r\n/** 유효성 검사 */\r\nconst validate = (values) => {\r\n    const errors = {};\r\n\r\n    if (!values.email) {\r\n        errors.email = \"메일주소를 입력해주세요.\"\r\n    }\r\n    if (!values.password) {\r\n        errors.password = \"비밀번호를 입력해주세요.\"\r\n    }\r\n    return errors;\r\n};\r\n\r\n/** store가 업데이트 될때마다 자동으로 호출 */\r\n/** connect함수 첫번째 인자로 들어감 */\r\nmapStateToProps = (state) => ({\r\n    loginUser: state.authReducer.loginUser\r\n});\r\n\r\n/** store에 접근한 컴포넌트가 store의 상태를 바꾸기 위해 사용 */\r\n/** connect함수 두번째 인자로 들어감 */\r\nmapDispatchToProps = (dispatch) => ({\r\n    dispatch\r\n});\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, mapDispatchToProps),\r\n    reduxForm({\r\n        form: \"login\",\r\n        validate\r\n    })\r\n)(Login);\r\n\r\n/** 스타일 */\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n        flex: 1,\r\n        backgroundColor: \"#fff\",\r\n        alignItems: \"center\",\r\n        justifyContent: \"center\",\r\n    },\r\n    formContainer: {\r\n        flex: 1.5,\r\n        backgroundColor: \"#fff\",\r\n        alignItems: \"center\",\r\n        justifyContent: \"flex-start\",\r\n    },\r\n    loginTextCont: {\r\n        flex: 1,\r\n        backgroundColor: \"#fff\",\r\n        alignItems: \"center\",\r\n        justifyContent: \"center\",\r\n        marginVertical: 15,\r\n        flexDirection: \"row\"\r\n    },\r\n    signUpTextCont: {\r\n        flex: 1,\r\n        backgroundColor: \"#fff\",\r\n        alignItems: \"center\",\r\n        justifyContent: \"center\",\r\n        marginVertical: 15,\r\n        flexDirection: \"row\"\r\n    },\r\n    signUpText: {\r\n        color: \"#6E6E6E\"\r\n    },\r\n    signUpTextButton: {\r\n        color: \"#000000\",\r\n        fontWeight: \"600\"\r\n    },\r\n    signUpButton: {\r\n        backgroundColor: \"#000000\",\r\n        width: 300,\r\n        borderRadius: 20,\r\n        marginVertical: 25,\r\n        justifyContent:\"center\",\r\n        height:40\r\n    },\r\n    signUpButtonText: {\r\n        color: \"#FFFFFF\",\r\n        fontSize: 17,\r\n        fontWeight: \"500\",\r\n        textAlign: \"center\"\r\n    },\r\n    errorText: {\r\n        color: \"#6E6E6E\",\r\n        fontSize: 13,\r\n        paddingHorizontal: 5,\r\n        paddingBottom: 3\r\n    }\r\n});"]},"metadata":{},"sourceType":"module"}