{"ast":null,"code":"import { combineReducers } from \"redux\";\n\nvar getUser = function getUser() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case \"GET_USER_LOADING\":\n      return {\n        isLoading: true,\n        isError: false,\n        isSuccess: false,\n        userDetails: null,\n        errors: null\n      };\n\n    case \"GET_USER_SUCCESS\":\n      return {\n        isLoading: false,\n        isError: false,\n        isSuccess: true,\n        userDetails: action.payload,\n        errors: null\n      };\n\n    case \"GET_USER_FAIL\":\n      return {\n        isLoading: false,\n        isError: true,\n        isSuccess: false,\n        userDetails: null,\n        errors: action.payload\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default combineReducers({\n  getUser: getUser\n});","map":{"version":3,"sources":["C:/Users/parkgichan/Desktop/자기소개서/langtube/Rangtube/source/reducers/user.reducer.js"],"names":["combineReducers","getUser","state","action","type","isLoading","isError","isSuccess","userDetails","errors","payload"],"mappings":"AAAA,SAASA,eAAT,QAAgC,OAAhC;;AAGA,IAAMC,OAAO,GAAG,SAAVA,OAAU,GAAwB;AAAA,MAAvBC,KAAuB,uEAAf,EAAe;AAAA,MAAXC,MAAW;;AACpC,UAAQA,MAAM,CAACC,IAAf;AACI,SAAK,kBAAL;AACI,aAAO;AACHC,QAAAA,SAAS,EAAE,IADR;AAEHC,QAAAA,OAAO,EAAE,KAFN;AAGHC,QAAAA,SAAS,EAAE,KAHR;AAIHC,QAAAA,WAAW,EAAE,IAJV;AAKHC,QAAAA,MAAM,EAAE;AALL,OAAP;;AAOJ,SAAK,kBAAL;AACI,aAAO;AACHJ,QAAAA,SAAS,EAAE,KADR;AAEHC,QAAAA,OAAO,EAAE,KAFN;AAGHC,QAAAA,SAAS,EAAE,IAHR;AAIHC,QAAAA,WAAW,EAAEL,MAAM,CAACO,OAJjB;AAKHD,QAAAA,MAAM,EAAE;AALL,OAAP;;AAOJ,SAAK,eAAL;AACI,aAAO;AACHJ,QAAAA,SAAS,EAAE,KADR;AAEHC,QAAAA,OAAO,EAAE,IAFN;AAGHC,QAAAA,SAAS,EAAE,KAHR;AAIHC,QAAAA,WAAW,EAAE,IAJV;AAKHC,QAAAA,MAAM,EAAEN,MAAM,CAACO;AALZ,OAAP;;AAOJ;AACI,aAAOR,KAAP;AA1BR;AA4BH,CA7BD;;AA+BA,eAAeF,eAAe,CAAC;AAC3BC,EAAAA,OAAO,EAAPA;AAD2B,CAAD,CAA9B","sourcesContent":["import { combineReducers } from \"redux\";\r\n\r\n/** 로그인 완료 후 dispatch 함수로 부터 전달받은 action 객체의 유형의 따라 state를 변경 */\r\nconst getUser = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case \"GET_USER_LOADING\":\r\n            return {\r\n                isLoading: true,\r\n                isError: false,\r\n                isSuccess: false,\r\n                userDetails: null,\r\n                errors: null\r\n            }\r\n        case \"GET_USER_SUCCESS\":\r\n            return {\r\n                isLoading: false,\r\n                isError: false,\r\n                isSuccess: true,\r\n                userDetails: action.payload,\r\n                errors: null\r\n            }\r\n        case \"GET_USER_FAIL\":\r\n            return {\r\n                isLoading: false,\r\n                isError: true,\r\n                isSuccess: false,\r\n                userDetails: null,\r\n                errors: action.payload\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default combineReducers({\r\n    getUser\r\n});"]},"metadata":{},"sourceType":"module"}